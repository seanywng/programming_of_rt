---
title: "Untitled"
format: html
editor: visual
---

```{r setup}
library(ggplot2)
library(tibble)
library(ggthemes)
library(scales)
library(dplyr)
```

# Technique

```{r}
mpg |> 
  ggplot(aes(x = displ, y = hwy, colour = drv, size = cyl)) + 
  geom_point(show.legend = FALSE, size = 4) +  
  geom_point(show.legend = FALSE, size = 1, colour = "#222222") + 
  coord_polar() +
  theme_void() + 
  scale_color_brewer()
```

```{r}
set.seed(1)

n <- 50

dat <- tibble(
  x0 = runif(n), 
  y0 = runif(n), 
  x1 = x0 + runif(n, min = -.2, max = .2), 
  y1 = y0 + runif(n, min = -.2, max = .2), 
  shade = runif(n), 
  size = runif(n)
)

dat |> 
  ggplot(aes(
    x = x0, 
    y = y0, 
    xend = x1, 
    yend = y1, 
    colour = shade, 
    size = size
  )) + 
  geom_segment(show.legend = FALSE) + 
  coord_polar() + 
  scale_y_continuous(expand = c(0, 0)) + 
  scale_x_continuous(expand =c(0, 0)) + 
  scale_colour_viridis_c() + 
  scale_size(range = c(0, 10)) + 
  theme_void()

```

Let's put this into a function: 

```{r}

polar_art <- function(seed, n, palette) {
  
  set.seed(seed)

  dat <- tibble(
    x0 = runif(n), 
    y0 = runif(n), 
    x1 = x0 + runif(n, min = -.2, max = .2), 
    y1 = y0 + runif(n, min = -.4, max = .9), 
    shade = runif(n), 
    size = runif(n)
  )
  
  dat |> 
    ggplot(aes(
      x = x0, 
      y = y0, 
      xend = x1, 
      yend = y1, 
      colour = shade, 
      size = size
    )) + 
    geom_segment(show.legend = FALSE) + 
    coord_polar() + 
    scale_y_continuous(expand = c(0, 0)) + 
    scale_x_continuous(expand =c(0, 0)) + 
    scale_colour_gradientn(colours = palette) + 
    scale_size(range = c(0, 10)) + 
    theme_void()

}
```


```{r}
polar_art(seed = 1, n = 500, palette = c("antiquewhite", "orange", "bisque"))
polar_art(seed = 1, n = 500, palette = c("white", "bisque", "orange",  "red", "black"))
polar_art(seed = 2, n = 50, palette = c("red", "black", "white"))
```

# Colour

```{r}
pal <- c("#cdb4db", "#ffc8dd", "#ffafcc", "#bde0fe", "#a2d2ff")

show_col(pal)

palette_fn <- colorRampPalette(pal)

palette_fn(100)
```

```{r}
image(
  x = matrix(1:100, ncol = 1), 
  col = palette_fn(100), 
  useRaster = TRUE, 
  axes = FALSE
)
```


```{r}
canva_palettes[[101]]

show_col(canva_palettes[[101]])
```

```{r}
sample_canva <- function(seed = NULL) {
  if(!is.null(seed)) set.seed(seed)
  sample(ggthemes::canva_palettes, 1)[[1]]
}
```

```{r}
polar_art(seed = 90000, n = 100, palette = sample_canva(seed = 2338))
```

```{r}
colours(distinct = TRUE)

sample_r_colours <- function(seed = NULL) {
  
  if(!is.null(seed)) set.seed(seed)
  
  c(sample(colours(distinct = TRUE), 1)[[1]], 
    sample(colours(distinct = TRUE), 1)[[1]],
    sample(colours(distinct = TRUE), 1)[[1]], 
    sample(colours(distinct = TRUE), 1)[[1]])
}

sample_r_colours(seed = 4)
```

```{r}
polar_art(seed = 90000, n = 100, palette = sample_r_colours(seed = 5))

sample(colours(distinct = TRUE), 1)[[1]]

sample_canva2 <- function(seed = NULL, n = 4) {
  if(!is.null(seed)) set.seed(seed)
  sample(ggthemes::canva_palettes, 1)[[1]] |>
    (\(x) colorRampPalette(x)(n))()  
}
```

```{r}
 sample(colours(distinct = TRUE), 1)[[1]]

palette_fn <- colorRampPalette(pal)

colours()

factor(sample(0:22, size = 100, replace = TRUE))
runif(100)
```

```{r}
sample_data <- function(seed = NULL, n = 100){
  if(!is.null(seed)) set.seed(seed)
  dat <- tibble(
    x0 = runif(n),
    y0 = runif(n),
    x1 = x0 + runif(n, min = -.2, max = .2),
    y1 = y0 + runif(n, min = -.2, max = .2),
    shade = runif(n), 
    size = runif(n),
    shape = factor(sample(0:22, size = n, replace = TRUE))
  )
}
```


```{r}
polar_styled_plot <- function(data = NULL, palette) {
  ggplot(
    data = data, 
    mapping = aes(
      x = x0, 
      y = y0, 
      xend = x1, 
      yend = y1, 
      colour = shade, 
      size = size
    )
  ) +
    coord_polar(clip = "off") + 
    scale_y_continuous(
      expand = c(0, 0), 
      limits = c(0, 1), 
      oob = scales::oob_keep
    ) + 
    scale_colour_gradientn(colours = palette) + 
    scale_x_continuous(
      expand = c(0, 0), 
      limits = c(0, 1), 
      oob = scales::oob_keep
    ) + 
    scale_size(range = c(0, 10)) + 
    theme_void() + 
    guides(
      colour = guide_none(), 
      size = guide_none(), 
      fill = guide_none(), 
      shape = guide_none()
    )
}
```


```{r}
dat <- sample_data(n = 100, seed = 1)
pal <- sample_canva(seed = 144)
```

```{r}

polar_styled_plot(data = dat, palette = pal) + geom_segment()
polar_styled_plot(data = dat, palette = pal) + geom_path()
polar_styled_plot(data = dat, palette = pal) + geom_point()
```

```{r}
dat1 <- sample_data(n = 2000, seed = 123)
dat2 <- sample_data(n = 100, seed = 456) |> 
  mutate(y0 = .3 + y0 * .6, y1 = .3)

```

```{r}
polar_styled_plot(palette = sample_canva(seed = 7)) + 
  geom_segment(
    data = dat1 |> mutate(size = size * 3)
  ) + 
  geom_segment(
    data = dat2 |> mutate(size = size / 5), 
    lineend = "round", 
    colour = "white"
  ) +
  geom_segment(
    data = dat2 |> mutate(size = size / 40), 
    lineend = "round", 
    colour = "#222222"
  ) +
  geom_point(
    data = dat2 |> mutate(size = size * 2),
    colour = "#222222"
  )
```

```{r}
dat <- sample_data(n = 2000, seed = 123) |>
  mutate(y1 = y0, size = size / 2)

polar_styled_plot(palette = sample_canva(seed = 456)) + 
  geom_segment(data = dat) + 
  geom_segment(data = dat |> mutate(y1 = y1 - .2, y0 = y0 - .2)) +
  geom_segment(data = dat |> mutate(y1 = y1 - .4, y0 = y0 - .4))
```
  
  